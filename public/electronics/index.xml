<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Electronics on Well lets take a look at it, Mr Gumby!</title>
    <link>http://localhost:63700/electronics/</link>
    <description>Recent content in Electronics on Well lets take a look at it, Mr Gumby!</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Apr 2022 21:07:32 +0100</lastBuildDate>
    <atom:link href="http://localhost:63700/electronics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DS18B20 Temperature Sensor PCB</title>
      <link>http://localhost:63700/ds18b20_temp_sensor_pcb/</link>
      <pubDate>Sat, 23 Apr 2022 21:07:32 +0100</pubDate>
      <guid>http://localhost:63700/ds18b20_temp_sensor_pcb/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In 2013 I discovered the DS18B20 digital thermometer IC made by Maxim Integrated. It&amp;rsquo;s a great little IC that has provides a 12 bit temperature measurement and interfaces over the 1-Wire bus allowing multiple sensors to be daisy chained! Back then I used veraboard and some terrible soldering to create the strings of sensors used in my greenhouse. Well its now 2022 and I&amp;rsquo;m back to thinking about greenhouses.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FTDI4222 Project Setup for Windows</title>
      <link>http://localhost:63700/ftdi4222_setup_windows/</link>
      <pubDate>Fri, 03 Dec 2021 10:54:15 +0000</pubDate>
      <guid>http://localhost:63700/ftdi4222_setup_windows/</guid>
      <description>&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;Software required&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MinGW compiler - gcc.exe - Version 6.3.0-1&lt;/li&gt;&#xA;&lt;li&gt;MinGW make system - mingw32-make&lt;/li&gt;&#xA;&lt;li&gt;CMake - Version 3.22&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Download the relevent drivers for the IC&lt;/p&gt;&#xA;&lt;p&gt;D2XX Drivers: &lt;a href=https://ftdichip.com/wp-content/uploads/2021/08/CDM212364_Setup.zip target=&#34;_blank&#34;&gt;FTD2XX&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;FT4222H Driver: &lt;a href=https://www.ftdichip.com/Support/SoftwareExamples/LibFT4222-v1.4.4.zip target=&#34;_blank&#34;&gt;FT4222H&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;This link may not work if the driver has been updated. If this is the case then the link can be found at &lt;a href=https://ftdichip.com/products/ft4222h/ target=&#34;_blank&#34;&gt;FTDI4222 Windows Library&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Install the D2xx driver from the downloaded installer.&lt;/p&gt;&#xA;&lt;!-- This will place the ftd2xx.dll in the System32 folder. --&gt;&#xA;&lt;p&gt;&lt;strong&gt;FTDI4222 Library Folder&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interfacing with FTDIs FT4222H USB 2.0 to Quad SPI / I2C Bridge IC</title>
      <link>http://localhost:63700/ftdi-4222-setup/</link>
      <pubDate>Sat, 23 May 2020 17:20:32 +0200</pubDate>
      <guid>http://localhost:63700/ftdi-4222-setup/</guid>
      <description>&lt;p&gt;A tutorial for interfacing with FTDIs FT4222H USB 2.0 to Quad SPI / I2C Bridge IC on macOS&lt;/p&gt;&#xA;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;Download the relevent drivers for the IC&lt;/p&gt;&#xA;&lt;p&gt;D2XX Drivers: &lt;a href=https://www.ftdichip.com/Drivers/D2XX.htm target=&#34;_blank&#34;&gt;FTD2XX&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;FT4222H Driver: &lt;a href=https://www.ftdichip.com/Products/ICs/FT4222H.html target=&#34;_blank&#34;&gt;FT4222H&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open D2XX1.4.16.dmg and copy the D2XX folder to your desktop&lt;/li&gt;&#xA;&lt;li&gt;Inside we are interested in 3 files:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ftd2xx.h&lt;/li&gt;&#xA;&lt;li&gt;WinTypes.h&lt;/li&gt;&#xA;&lt;li&gt;libftd2xx.1.14.16.dylib&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Open a terminal and navigate to the D2XX folder on your desktop&lt;/li&gt;&#xA;&lt;li&gt;Move .h files to /usr/local/include&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv ftd2xx.h WinTypes.h /usr/local/include &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Move &amp;lsquo;.dylib&amp;rsquo; file to /usr/local/lib&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv libftd2xx.1.14.16.dylib /usr/local/lib &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;Create second folder on Desktop and copy contents of libft4222.1.4.4.14.dmg to it&lt;/li&gt;&#xA;&lt;li&gt;move &lt;code&gt;libft4222.1.4.4.14.dylib&lt;/code&gt; to /usr/local/lib&lt;/li&gt;&#xA;&lt;li&gt;move files &lt;code&gt;libboost_system.dylib&lt;/code&gt; and &lt;code&gt;libboost_thread-mt.dylib&lt;/code&gt; located in boost_libs to /usr/local/lib&lt;/li&gt;&#xA;&lt;li&gt;move &lt;code&gt;libft4222.h&lt;/code&gt; to /usr/local/include&lt;/li&gt;&#xA;&lt;li&gt;Create symbolic links for &lt;code&gt;libft4222.1.4.4.14.dylib&lt;/code&gt; and &lt;code&gt;libftd2xx.1.4.16.dylib&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ln -s /usr/local/lib/libft4222.1.4.4.14.dylib /usr/local/lib/libft4222.dylib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ln -s /usr/local/lib/libftd2xx.1.4.16.dylib /usr/local/lib/libftd2xx.dylib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;notes-on-installing&#34;&gt;Notes on installing&lt;/h4&gt;&#xA;&lt;p&gt;If using a device with standard FTDI vendor and product identifiers, install D2xxHelper to prevent mac OS from claiming the device as a serial port (locking out D2XX programs). This will prevent the device being used with the VCP driver as a standard COM port. D2xxHelper can be found here : &lt;a href=https://www.ftdichip.com/Drivers/D2XX/MacOSX/D2xxHelper_v2.0.0.pkg target=&#34;_blank&#34;&gt;D2xxHelper&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rules and Permissions for USB Blaster Setup in Linux Virtual Machine</title>
      <link>http://localhost:63700/usb-blaster-linux-quartus2-virtual-machine/</link>
      <pubDate>Sun, 22 Mar 2020 20:14:00 +0000</pubDate>
      <guid>http://localhost:63700/usb-blaster-linux-quartus2-virtual-machine/</guid>
      <description>&lt;p&gt;SOURCE: &lt;a href=&#34;https://stackoverflow.com/questions/18704913/unable-to-lock-chain-insufficient-port-permissions&#34;&gt;https://stackoverflow.com/questions/18704913/unable-to-lock-chain-insufficient-port-permissions&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;If when jtagconfig is ran&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; USB-Blaster varient &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;2-1&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;unable to lock chain&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Insufficient port permissions&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;is returned and Quartus cant program your FPGA. The following steps should fix this problem. An amazing resource on setting up Quartus and other Altera related design software is&#xA;&lt;a href=https://wiki.archlinux.org/index.php/Altera_Design_Software  target=&#34;_blank&#34;&gt; Altera Design Software  &lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Before a USB Blaster can be used its jtag rules and permissions must be configured.&lt;/p&gt;&#xA;&lt;p&gt;First kill jtagd.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo killall -9 jtagd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If jtagconfig is ran whilst jtagd is already running then jtagconfig will have no effect.&#xA;jtagd and jtagconfig can be found in&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using the AD5627 DAC</title>
      <link>http://localhost:63700/using-the-ad8627-dac/</link>
      <pubDate>Sun, 08 Dec 2019 11:23:58 +0100</pubDate>
      <guid>http://localhost:63700/using-the-ad8627-dac/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;The&#xA;&lt;a href=https://www.analog.com/media/en/technical-documentation/data-sheets/AD5627R_5647R_5667R_5627_5667.pdf target=&#34;_blank&#34;&gt;AD5627RBRMZ (Datasheet)&lt;/a&gt; is part of a series of 12/14/16 bit nano DACs with an I2C interface.&#xA;The DAC we are interested in is the 12 bit AD5627RBRMZ which has a 5ppm/ËšC internal reference and can operate upto 5V.&lt;/p&gt;&#xA;&lt;h2 id=&#34;design&#34;&gt;Design&lt;/h2&gt;&#xA;&lt;p&gt;The DAC requires a high I2C level to be 0.8 * Vcc, which is 4V if we are interested in using the full capability of the DAC. In this design the I2C is operating on a 3.3 Volt bus, therefore, a bidirectional I2C level shiter is required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>USB Design Guide</title>
      <link>http://localhost:63700/usb-design/</link>
      <pubDate>Sat, 30 Nov 2019 12:59:24 +0100</pubDate>
      <guid>http://localhost:63700/usb-design/</guid>
      <description>&lt;h2 id=&#34;key-features&#34;&gt;Key features&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;USB connector&lt;/li&gt;&#xA;&lt;li&gt;ESD protection&lt;/li&gt;&#xA;&lt;li&gt;Differential microstrip design for USB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;usb-connector&#34;&gt;USB Connector&lt;/h2&gt;&#xA;&lt;p&gt;For this particular design I have chosen a USB-B female connector from Mouser.&lt;/p&gt;&#xA;&lt;div&gt;&#xA;  &lt;table class=&#34;w3-table-all w3-card-4&#34; table style=&#34;width:70%&#34; align=&#34;center&#34;&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;Mouser #&lt;/th&gt;&#xA;      &lt;th&gt;Manufacturer #&lt;/th&gt;&#xA;      &lt;th&gt;Manufacturer &lt;/th&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;td&gt;571-292304-1&lt;/td&gt;&#xA;      &lt;td&gt;292304-1 &lt;/td&gt;&#xA;      &lt;td&gt;TE Connectivity&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;br&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &#xA;&lt;img src=&#34;http://localhost:63700/electronics/images/usb-b.png&#34; alt=&#34;drawing&#34; width=&#34;100&#34;&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;The USB connector datasheet can be found&#xA;&lt;a href=&#34;https://www.mouser.ch/datasheet/2/418/NG_DS_7-1773442-0_0306-1258760.pdf&#34; target=&#34;_blank&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;esd-protection&#34;&gt;ESD Protection&lt;/h2&gt;&#xA;&lt;p&gt;The&#xA;&lt;a href=&#34;https://assets.nexperia.com/documents/data-sheet/PRTR5V0U4Y.pdf&#34; target=&#34;_blank&#34;&gt;PRTR5V0U4Y&lt;/a&gt;&#xA;is designed to protect Input/Output (I/O) ports that are sensitive to capacitive load, such as USB 2.0, Ethernet and DVI from destruction by ElectroStaticDischarge (ESD). It provides protection to downstream signal and supply components from ESD voltages as high as Â±8 kV (contact discharge).The PRTR5V0U4Y incorporates four pairs of ultra-low capacitance rail-to-rail diodes plus a Zener diode. The rail-to-rail diodes are connected to the Zener diode which allows ESD protection to be independent of supply voltage. The PRTR5V0U4Y is fabricated using thin film-on-silicon technology integrating four ultra-low capacitance rail-to-rail ESD protection diodes in a miniature 6-lead SOT363 package.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Voltage Monitoring</title>
      <link>http://localhost:63700/voltage-monitring/</link>
      <pubDate>Fri, 22 Nov 2019 23:54:08 +0000</pubDate>
      <guid>http://localhost:63700/voltage-monitring/</guid>
      <description>&lt;p&gt;The ADA4096 operational amplifier comes in a dual and quad package. Its inputs are protected by overvoltage protection diodes making it a perfect candidate for monitoring voltages, especially when power to the IC could be lost.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=https://www.analog.com/media/en/technical-documentation/data-sheets/ADA4096-2_4096-4.pdf target=&#34;_blank&#34;&gt;ADA4096 Datasheet&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The LTC2990 is a Quad I2C voltage, current, and temperature monitor. When used in conjunction with the ADA4096 it makes a simple monitoring interface through I2C.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=https://www.analog.com/media/en/technical-documentation/data-sheets/LTC2990.pdf target=&#34;_blank&#34;&gt;LTC2990 Datasheet&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The LTC2990 supply voltages are between 3.3V and 5V so each voltage to be monitored should fall within the range of the chosen supply voltage. The figure below shows a simple circuit to monitor positive and negative voltages. Filtering, although not necessary, adds some stability to the measured voltages. A recommended capacitor is 100nF.&lt;/p&gt;</description>
    </item>
    <item>
      <title>XOR Logic used as a Buffer or Inverter</title>
      <link>http://localhost:63700/xor-buffer-inverter/</link>
      <pubDate>Fri, 22 Nov 2019 23:02:47 +0000</pubDate>
      <guid>http://localhost:63700/xor-buffer-inverter/</guid>
      <description>&lt;p&gt;XOR gates can be used to form inverters or buffers when a single input is tied to Vdd or Ground. In the figure below, U1 is setup as an inverter, and U2 is setup as a buffer.&lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &#xA;&lt;img src=&#34;http://localhost:63700/electronics/images/XOR buffer inverter.png&#34; alt=&#34;drawing&#34; width=&#34;300&#34;&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;The&#xA;&lt;a href=https://www.ti.com/lit/ds/symlink/sn74lvc2g86.pdf target=&#34;_blank&#34;&gt;SN74LVC2G86 (Datasheet)&lt;/a&gt;&#xA;is a dual package XOR that can operate at voltages up to 5.5V and deliver up to 50mA of continuous current. Other notable features include a propagation delay between 1.4 and 4.2nS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Precision Op Amp Gain Adjustment with DACs</title>
      <link>http://localhost:63700/op-amp-gain-adjustment-dac/</link>
      <pubDate>Wed, 30 Oct 2019 22:24:10 +0100</pubDate>
      <guid>http://localhost:63700/op-amp-gain-adjustment-dac/</guid>
      <description>&lt;p&gt;Basic non-inverting operational amplifier design involves a feedback resistor and a gain resistor. These are shown in the figure below as R2 as the feedback resistor and R1 as the gain resistor. The formula for calculating the gain is;&lt;/p&gt;&#xA;&lt;p&gt;\begin{align}&#xA;Gain = \frac{R_2}{R_1} + 1&#xA;\end{align}&lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &#xA;&lt;img src=&#34;http://localhost:63700/electronics/images/op-amp-non-inv.png&#34;&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;It would be nice to adjust the gain of this amplifier. This can be done achieved easily with a potentiometer in place of R1 or R2. Digital potentiometers are even an option for remote control of the gain. Potentiometers though, give only a coarse adjustment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FPGA I2C Wishbone Interface and Testing </title>
      <link>http://localhost:63700/i2c-wishbone-interface-fpga/</link>
      <pubDate>Sun, 27 Oct 2019 20:04:40 +0100</pubDate>
      <guid>http://localhost:63700/i2c-wishbone-interface-fpga/</guid>
      <description>&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lua 5.14+ (recommended 5.15) (&lt;a href=&#34;https://github.com/rjpcomputing/luaforwindows/releases/tag/v5.1.5-52&#34;&gt;https://github.com/rjpcomputing/luaforwindows/releases/tag/v5.1.5-52&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;wbgen2 &lt;a href=&#34;https://www.ohwr.org/project/wishbone-gen&#34;&gt;https://www.ohwr.org/project/wishbone-gen&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;MCP2221A USB2.0 to I2C/UART Protocol Converter with GPIO&lt;/li&gt;&#xA;&lt;li&gt;Any USB to I2C device will work.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;creating-an-i2c-wishbone-interface-for-fpga&#34;&gt;Creating an I2C wishbone interface for FPGA&lt;/h1&gt;&#xA;&lt;p&gt;The wishbone interface acts as a bridge between the FPGA and external signals containing a master and a slave. In this example the FPGA will be acting as an I2C slave with two registers;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 read/write&lt;/li&gt;&#xA;&lt;li&gt;1 read only.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;create-the-wb-file-for-the-i2c-slave&#34;&gt;Create the .wb file for the I2C slave&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;documentation found at &lt;a href=&#34;https://ohwr.org/project/wishbone-gen/wikis/wbgen2-reg&#34;&gt;https://ohwr.org/project/wishbone-gen/wikis/wbgen2-reg&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The .wb defines the registers for the I2C slave. Here we define two registers &lt;br&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparison of Integrated Noise Spectrum of JFET and BJT input Operational Amplifiers</title>
      <link>http://localhost:63700/integrated-noise-spectrum/</link>
      <pubDate>Sun, 27 Oct 2019 19:04:09 +0100</pubDate>
      <guid>http://localhost:63700/integrated-noise-spectrum/</guid>
      <description>&lt;p&gt;Reference material: &lt;a href=https://training.ti.com/sites/default/files/docs/Op%20Amp%20Tech%20Overview_0.pdf target=&#34;_blank&#34;&gt;Texas Instruments - Op Amp Technical Overview&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;When developing precision DC systems BJT transistors are the way to go. Be careful when selecting an op amp based on its datasheet noise characteristics. At DC we are interested in the 1/f noise, which as the name suggests increases as we approach DC. an example is shown below comparing the JFET input OPA827 and the BJT input OPA227.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:63700/electronics/images/JFET-vs-BJT-flicker-noise.png&#34; alt=&#34;Noise&#34;&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: center;&#34;&gt; *Figure1 - CMOS, BJT, and JFET flicker noise*&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
